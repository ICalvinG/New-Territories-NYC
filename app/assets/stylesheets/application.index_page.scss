@charset 'utf-8';

/*------------------------------------*\
    Index Page Stylesheet
\*------------------------------------*/

/**
 * NOTE It's worth noting that most guidelines for writing good CSS and SCSS is
 * borrowed of two different guidelines. For more information, see our code
 * or take a look at the guidelines:
 * - CSS Guidelines: http://cssguidelin.es/
 * - SCSS Guidelines: https://sass-guidelin.es/
 *
 * TODO Replace the above examples with our own CSS/SCSS guidelines, which
 * might be based on the above guidelines.
 */

/*------------------------------------*\
    Table of contents
\*------------------------------------*/

/**
 * ABSTRACTS
 * ----------------------------------------------------------------------------
 * Variables............Sass variables
 * Functions............Sass functions
 * Mixins...............Sass mixins
 * Placeholders.........Sass placeholders
 * Bulma................A CSS Framework
 *
 * BASE
 * ----------------------------------------------------------------------------
 *
 * LAYOUT
 * ----------------------------------------------------------------------------
 *
 * PAGES
 * ----------------------------------------------------------------------------
 *
 * SHAME
 * ----------------------------------------------------------------------------
 * Shame................The hacks we should feel ashamed for (if any)
 */

/**
 * Abstracts
 * ----------------------------------------------------------------------------
 * The abstracts/ folder gathers all Sass tools and helpers used across the
 * project. Every global variable, function, mixin and placeholder should be put
 * in here.
 *
 * The rule of thumb for this folder is that it should not output a single line
 * of CSS when compiled on its own. These are nothing but Sass helpers.
 */

/**
 * Base
 * ----------------------------------------------------------------------------
 * The base/ folder holds what we might call the boilerplate code for the project.
 * In there, you might find the reset file, some typographic rules, and probably a
 * stylesheet defining some standard styles for commonly used HTML elements
 */

/**
 * Layout
 * ----------------------------------------------------------------------------
 * The layout/ folder contains everything that takes part in laying out the site
 * or application. This folder could have stylesheets for the main parts of the
 * site (header, footer, navigation, sidebar…), the grid system or even CSS styles
 * for all the forms.
 */

/**
 * Components
 * ----------------------------------------------------------------------------
 * For smaller components, there is the components/ folder. While layout/ is macro
 * (defining the global wireframe), components/ is more focused on widgets.
 * It contains all kind of specific modules like a slider, a loader, a widget,
 * and basically anything along those lines. There are usually a lot of files
 * in components/ since the whole site/application should be mostly composed of
 * tiny modules.
 */

/**
 * Pages
 * ----------------------------------------------------------------------------
 * If you have page-specific styles, it is better to put them in a pages/
 * folder, in a file named after the page. For instance, it’s not uncommon to have
 * very specific styles for the home page hence the need for a _home.scss file in
 * pages/.
 */
